{"version":3,"sources":["utils/api_endpoints.js","utils/calculateTimeSlots.js","assets/icn_surfing.svg","assets/icn_hiking.svg","assets/icn_weights.svg","assets/icn_spin.svg","assets/logo_header_wide.svg","assets/icn_plus.svg","assets/surfing@2x.png","assets/hiking@2x.png","assets/weights@2x.png","assets/spinning@2x.png","assets/icn_surfing_light.svg","assets/icn_hiking_light.svg","assets/icn_weights_light.svg","assets/icn_spin_light.svg","constants.js","reducers/index.js","reducers/reducer_user.js","reducers/reducer_activity.js","reducers/reducer_history_activity.js","reducers/reducer_scheduled_activity.js","components/common/Header.js","components/Card/index.js","components/common/ActivityTrack.js","components/ScheduledActivities/index.js","components/ActivityHistory/index.js","actions/index.js","components/Main/index.js","components/Timer/index.js","components/CurrentActivity/index.js","screens/CurrentActivityPage.js","components/ScheduleActivity/index.js","screens/ScheduleActivityPage.js","router/index.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","API_ENDPOINTS","historyActivity","scheduledActivity","moment","require","isBefore","start","end","startTime","endTime","isSameOrBefore","findFreeSpots","scheduledActivities","duration","length","getStepTimesRange","freeSpots","head","tail","push","apply","Object","_Users_kristijanpetrovski_Desktop_ReactJS_nixa_app_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","i","endTimePrev","startTimeCur","startTimeIn","endTimeIn","diff","asMinutes","tracks","add","format","get7DaysRange","dates","currDate","set","hour","minute","second","millisecond","unix","console","log","__webpack_require__","p","SELECT_ACTIVITY","CLEAR_ACTIVITY","ADD_ACTIVITY_HISTORY_SUCCESS","ADD_ACTIVITY_HISTORY_FAILURE","GET_ACTIVITY_HISTORY","GET_ACTIVITY_SCHEDULED","ADD_ACTIVITY_SCHEDULED_FAILURE","ADD_ACTIVITY_SCHEDULED_SUCCESS","combineReducers","user","state","arguments","undefined","action","type","activity","payload","concat","toConsumableArray","Header","react_default","a","createElement","className","src","header_logo","Card","_this$props","this","props","name","desc","bgImg","logo","onClick","Component","defaultProps","ActivityTrack","_renderHistoryCircles","_this$props$items","_this","items","map","indice","index","key","style","marginRight","width","height","minWidth","marginTop","fontFamily","color","fontSize","time","month","_this$props$items2","timestamp","margin","ScheduledActivities","_renderTracks","data","grouped","_","groupBy","sortBy","keys","item","common_ActivityTrack","_this2","_this$props$data","_renderEmptyTrack","history","icn_plus","withRouter","ActivityHistory","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getScheduledActivitiesForDate","beginTimestamp","endTimeStamp","dispatch","axios","get","then","resp","status","catch","err","activities","Main","_selectActivity","selectActivity","_renderActivityCards","components_Card","getHistoryActivities","common_Header","padding","src_components_ScheduledActivities","src_components_ActivityHistory","connect","Timer","CurrentActivity","momentCounter","setState","toFixed","asSeconds","componentWillReceiveProps","nextProps","_goBack","goBack","clearActivity","_onPressPause","clearInterval","timer","_saveActivity","Date","fullDate","addHistoryActivity","objectSpread","date","trackedTime","getTime","seconds","startTimer","bind","assertThisInitialized","replace","setInterval","_ref","justifyContent","fontWeight","components_Timer","lineHeight","textAlign","paddingBottom","post","CurrentActivityPage","src_components_CurrentActivity","logo_light","ScheduleActivity","_onChangeTimeActivity","value","timeActivityValue","_onChangeDateActivity","dateActivityValue","_renderActivityPicker","activityPicked","toUpperCase","_isButtonEnabled","_this$state","_renderTimeSlots","allSpots","dateGrouped","spots","spot","refTimePicker","refDatePicker","paddingLeft","marginBottom","id","onChange","target","addScheduledActivity","ScheduleActivityPage","src_components_ScheduleActivity","ReactRouter","Fragment","Route","exact","path","component","React","Boolean","window","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","logger","warn","ReactDOM","render","es","BrowserRouter","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.708c960e.chunk.js","sourcesContent":["const API_ENDPOINTS = {\n  historyActivity: '/history',\n  scheduledActivity: '/scheduled'\n};\n\nmodule.exports = {\n  API_ENDPOINTS\n};\n","const moment = require('moment');\n\nconst START_TIME = '08:00';\nconst END_TIME = '22:00';\nconst DURATION = 30;\n\nconst scheduled = [\n  {\n    start: '8:30',\n    end: '11:00'\n  },\n  {\n    start: '12:00',\n    end: '15:00'\n  },\n  {\n    start: '16:10',\n    end: '18:00'\n  },\n  {\n    start: '20:00',\n    end: '22:00'\n  }\n];\n\nfunction isBefore(start, end) {\n  let startTime = new moment(start, 'HH:mm');\n  let endTime = new moment(end, 'HH:mm');\n\n  return moment(startTime).isSameOrBefore(endTime);\n}\n\nexport const findFreeSpots = (scheduledActivities, duration) => {\n  if (scheduledActivities.length === 0) {\n    return getStepTimesRange(START_TIME, END_TIME, duration);\n  }\n  let freeSpots = [];\n  let head = scheduledActivities[0].startTime;\n  let tail = scheduledActivities[scheduledActivities.length - 1].endTime;\n  if (isBefore(START_TIME, head)) {\n    freeSpots.push(...getStepTimesRange(START_TIME, head, duration));\n  }\n\n  for (let i = 1; i < scheduledActivities.length; i++) {\n    let endTimePrev = scheduledActivities[i - 1].end;\n    let startTimeCur = scheduledActivities[i].start;\n    freeSpots.push(...getStepTimesRange(endTimePrev, startTimeCur, duration));\n  }\n\n  if (isBefore(tail, END_TIME)) {\n    freeSpots.push(...getStepTimesRange(tail, END_TIME, duration));\n  }\n  // console.log('Free Spots', freeSpots);\n  return freeSpots;\n};\n\nfunction getStepTimesRange(startTimeIn, endTimeIn, duration) {\n  let startTime = new moment(startTimeIn, 'HH:mm');\n  let endTime = new moment(endTimeIn, 'HH:mm');\n\n  if (moment.duration(endTime.diff(startTime)).asMinutes() < duration) {\n    return [];\n  }\n  let tracks = [];\n  while (isBefore(startTime, endTime)) {\n    if (\n      isBefore(\n        new moment(startTime, 'HH:mm').add(duration, 'minutes'),\n        endTimeIn\n      )\n    ) {\n      tracks.push(startTime.format('HH:mm'));\n    }\n\n    startTime = new moment(startTime, 'HH:mm').add(duration, 'minutes');\n  }\n  return tracks;\n}\n\nexport const get7DaysRange = () => {\n  let dates = [];\n  let currDate = moment();\n  for (let i = 1; i <= 7; i++) {\n    if (i === 1) {\n      dates.push(\n        new moment(currDate)\n          .add(i, 'days')\n          .set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n          .unix() * 1000\n      );\n    } else if (i === 7) {\n      dates.push(\n        new moment(currDate)\n          .add(i, 'days')\n          .set({ hour: 23, minute: 59, second: 59, millisecond: 0 })\n          .unix() * 1000\n      );\n    } else {\n      dates.push(new moment(currDate).add(i, 'days').unix() * 1000);\n    }\n  }\n  console.log(dates);\n  return dates;\n};\n","module.exports = __webpack_public_path__ + \"static/media/icn_surfing.8f01c192.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_hiking.fa259032.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_weights.c2141e59.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_spin.0ff7c39a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_header_wide.fb5a644c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_plus.51894886.svg\";","module.exports = __webpack_public_path__ + \"static/media/surfing@2x.ed502d78.png\";","module.exports = __webpack_public_path__ + \"static/media/hiking@2x.cc9e518b.png\";","module.exports = __webpack_public_path__ + \"static/media/weights@2x.b5299319.png\";","module.exports = __webpack_public_path__ + \"static/media/spinning@2x.f1ef8e0e.png\";","module.exports = __webpack_public_path__ + \"static/media/icn_surfing_light.0894d1dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_hiking_light.37e66559.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_weights_light.89707b0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn_spin_light.1e82ae6d.svg\";","export const LOGGED_USER = 'LOGGED_USER';\nexport const SELECT_ACTIVITY = 'SELECT_ACTIVITY';\nexport const CLEAR_ACTIVITY = 'CLEAR_ACTIVITY';\nexport const ADD_ACTIVITY_HISTORY_SUCCESS = 'ADD_ACTIVITY_HISTORY_SUCCESS';\nexport const ADD_ACTIVITY_HISTORY_FAILURE = 'ADD_ACTIVITY_HISTORY_FAILURE';\nexport const GET_ACTIVITY_HISTORY = 'GET_ACTIVITY_HISTORY';\nexport const GET_ACTIVITY_SCHEDULED = 'GET_ACTIVITY_SCHEDULED';\nexport const ADD_ACTIVITY_SCHEDULED_FAILURE = 'ADD_ACTIVITY_SCHEDULED_FAILURE';\nexport const ADD_ACTIVITY_SCHEDULED_SUCCESS = 'ADD_ACTIVITY_SCHEDULED_SUCCESS';\n","import { combineReducers } from 'redux';\nimport user from './reducer_user';\nimport activity from './reducer_activity';\nimport historyActivity from './reducer_history_activity';\nimport scheduledActivity from './reducer_scheduled_activity';\nexport default combineReducers({\n  user,\n  activity,\n  historyActivity,\n  scheduledActivity\n});\n","import { LOGGED_USER } from \"../constants\";\nexport default (state = null, action) => {\n  switch (action.type) {\n    case LOGGED_USER:\n      return action.user;\n    default:\n      return state;\n  }\n};\n","import { SELECT_ACTIVITY, CLEAR_ACTIVITY } from '../constants';\nexport default (state = null, action) => {\n  switch (action.type) {\n    case SELECT_ACTIVITY:\n      return action.payload;\n    case CLEAR_ACTIVITY:\n      return null;\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_ACTIVITY_HISTORY_FAILURE,\n  ADD_ACTIVITY_HISTORY_SUCCESS,\n  GET_ACTIVITY_HISTORY\n} from '../constants';\nexport default (state = [], action) => {\n  switch (action.type) {\n    case GET_ACTIVITY_HISTORY:\n      return action.payload;\n    case ADD_ACTIVITY_HISTORY_SUCCESS:\n      return [...state, action.payload];\n    case ADD_ACTIVITY_HISTORY_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_ACTIVITY_SCHEDULED_SUCCESS,\n  ADD_ACTIVITY_SCHEDULED_FAILURE,\n  GET_ACTIVITY_SCHEDULED\n} from '../constants';\nexport default (state = [], action) => {\n  switch (action.type) {\n    case GET_ACTIVITY_SCHEDULED:\n      return action.payload;\n    case ADD_ACTIVITY_SCHEDULED_SUCCESS:\n      return [...state, action.payload];\n    case ADD_ACTIVITY_SCHEDULED_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport header_logo from '../../assets/logo_header_wide.svg';\nconst Header = () => {\n  return (\n    <div className=\"header shadow\">\n      <img src={header_logo} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Card extends Component {\n  render() {\n    const { name, desc, bgImg, logo, onClick } = this.props;\n\n    return (\n      <section className=\"wrapper card-item\" onClick={onClick}>\n        <div className=\"card-image\">\n          <img src={bgImg} />\n        </div>\n        <div className=\"card-icon\">\n          <img src={logo} />\n        </div>\n        <div className=\"card-info\">\n          <h1>{name}</h1>\n          <p>{desc}</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  bgImg: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nCard.defaultProps = {\n  onClick: () => {}\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nclass ActivityTrack extends Component {\n  _renderHistoryCircles = () => {\n    const { items = [] } = this.props;\n    const track = items.length > 7 ? items : [0, 0, 0, 0, 0, 0, 0];\n\n    return track.map((indice, index) => {\n      if (items[index]) {\n        return (\n          <div\n            key={index}\n            className=\"flex-center\"\n            style={{ marginRight: '20px' }}\n          >\n            <div\n              className=\"activity-logo\"\n              style={{ width: '60px', height: '60px', minWidth: '60px' }}\n            >\n              <img src={items[index].logo} />\n            </div>\n            <p\n              style={{\n                marginTop: '9px',\n                fontFamily: 'europa',\n                color: '#8D8C8C',\n                fontSize: '12px'\n              }}\n            >\n              {items[index].time ? items[index].time : items[index].startTime}\n            </p>\n          </div>\n        );\n      }\n      return <div key={index} className=\"activity-circle\" />;\n    });\n  };\n\n  render() {\n    const { month, items = [] } = this.props;\n\n    let timestamp = items.length > 0 ? items[0].timestamp : month;\n    return (\n      <div className=\"activity-track-container\">\n        <p className=\"activity-btn\">{`${moment(timestamp).format(\n          'MMMM'\n        )} ${moment(timestamp).format('DD')}`}</p>\n        <p className=\"title\" style={{ margin: 0 }}>\n          {moment(timestamp).format('dddd')}\n        </p>\n        <div className=\"card-list activity-track\">\n          {this._renderHistoryCircles()}\n        </div>\n      </div>\n    );\n  }\n}\n\nActivityTrack.propTypes = {\n  items: PropTypes.array.isRequired,\n  month: PropTypes.string.isRequired\n};\n\nexport default ActivityTrack;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport icn_plus from '../../assets/icn_plus.svg';\nimport { withRouter } from 'react-router-dom';\nimport './index.css';\nimport ActivityTrack from '../common/ActivityTrack';\n\nclass ScheduledActivities extends Component {\n  _renderTracks = () => {\n    const { data } = this.props;\n    let grouped = _.groupBy(_.sortBy(data, 'date'), 'date');\n    let items = Object.keys(grouped);\n    return items.map((item, index) => {\n      return <ActivityTrack key={index} items={grouped[item]} month={item} />;\n    });\n  };\n\n  _renderEmptyTrack() {\n    return (\n      <p className=\"empty-activity\">\n        You don't have any activities scheduled yet.\n      </p>\n    );\n  }\n\n  render() {\n    console.log('Prop', this.props);\n    const { data = [] } = this.props;\n    return (\n      <div>\n        {!data.length ? this._renderEmptyTrack() : this._renderTracks()}\n\n        <div\n          className=\"activity-btn-wrapper\"\n          onClick={() => this.props.history.push('/schedule', {})}\n        >\n          <img src={icn_plus} />\n          <div className=\"activity-btn\">SCHEDULE ACTIVITY</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ScheduledActivities);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport ActivityTrack from '../common/ActivityTrack';\n\nimport './index.css';\n\nclass ActivityHistory extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  _renderTracks = () => {\n    const { data } = this.props;\n    let grouped = _.groupBy(_.sortBy(data, 'date'), 'date');\n    let items = Object.keys(grouped);\n    return items.map((item, index) => {\n      return <ActivityTrack key={index} items={grouped[item]} month={item} />;\n    });\n  };\n\n  render() {\n    const { data } = this.props;\n    if (!data.length) {\n      return (\n        <div>\n          <p className=\"empty-activity\">\n            You haven't tracked any activities yet.\n          </p>\n        </div>\n      );\n    }\n    return <div>{this._renderTracks()}</div>;\n  }\n}\n\nexport default ActivityHistory;\n","import axios from 'axios';\nimport { API_ENDPOINTS } from '../utils/api_endpoints';\nimport {\n  SELECT_ACTIVITY,\n  CLEAR_ACTIVITY,\n  ADD_ACTIVITY_HISTORY_SUCCESS,\n  ADD_ACTIVITY_HISTORY_FAILURE,\n  GET_ACTIVITY_HISTORY,\n  GET_ACTIVITY_SCHEDULED,\n  ADD_ACTIVITY_SCHEDULED_SUCCESS,\n  ADD_ACTIVITY_SCHEDULED_FAILURE\n} from '../constants';\n\nexport function selectActivity(activity) {\n  return dispatch => {\n    return dispatch({\n      type: SELECT_ACTIVITY,\n      payload: activity\n    });\n  };\n}\n\nexport function clearActivity() {\n  return {\n    type: CLEAR_ACTIVITY\n  };\n}\n\nexport function getHistoryActivities() {\n  return dispatch => {\n    axios\n      .get(API_ENDPOINTS.historyActivity)\n      .then(resp => {\n        if (resp.status === 200) {\n          return dispatch({\n            type: GET_ACTIVITY_HISTORY,\n            payload: resp.data\n          });\n        }\n\n        return dispatch({\n          type: GET_ACTIVITY_HISTORY,\n          payload: []\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: GET_ACTIVITY_HISTORY,\n          payload: []\n        });\n      });\n  };\n}\n\nexport function addHistoryActivity(activity) {\n  return dispatch => {\n    axios\n      .post(API_ENDPOINTS.historyActivity, {\n        ...activity\n      })\n      .then(resp => {\n        console.log('resp', resp);\n        if (resp.status === 201) {\n          return dispatch({\n            type: ADD_ACTIVITY_HISTORY_SUCCESS,\n            payload: resp.data\n          });\n        }\n        return dispatch({\n          type: ADD_ACTIVITY_HISTORY_FAILURE\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: ADD_ACTIVITY_HISTORY_FAILURE\n        });\n      });\n  };\n}\n\nexport function getScheduledActivitiesForDate(beginTimestamp, endTimeStamp) {\n  return dispatch => {\n    axios\n      .get(\n        `${\n          API_ENDPOINTS.scheduledActivity\n        }?_sort=timestamp&_order=desc&timestamp_gte=${beginTimestamp}&timestamp_lte=${endTimeStamp}`\n      )\n      .then(resp => {\n        if (resp.status === 200) {\n          return dispatch({\n            type: GET_ACTIVITY_SCHEDULED,\n            payload: resp.data\n          });\n        }\n\n        return dispatch({\n          type: GET_ACTIVITY_SCHEDULED,\n          payload: []\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: GET_ACTIVITY_SCHEDULED,\n          payload: []\n        });\n      });\n  };\n}\n\nexport function addScheduledActivity(activity) {\n  return dispatch => {\n    axios\n      .post(API_ENDPOINTS.scheduledActivity, {\n        ...activity\n      })\n      .then(resp => {\n        console.log('resp', resp);\n        if (resp.status === 201) {\n          return dispatch({\n            type: ADD_ACTIVITY_SCHEDULED_SUCCESS,\n            payload: resp.data\n          });\n        }\n        return dispatch({\n          type: ADD_ACTIVITY_SCHEDULED_FAILURE\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: ADD_ACTIVITY_SCHEDULED_FAILURE\n        });\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../common/Header';\nimport Card from '../Card';\nimport ScheduledActivities from '../ScheduledActivities';\nimport ActivityHistory from '../ActivityHistory';\n\nimport {\n  selectActivity,\n  getHistoryActivities,\n  getScheduledActivitiesForDate\n} from '../../actions';\n\nimport './App.css';\nconst { get7DaysRange } = require('../../utils/calculateTimeSlots');\nconst activities = [\n  {\n    name: 'Surfing',\n    desc: 'OCEAN BEACH',\n    bgImg: require('../../assets/surfing@2x.png'),\n    logo: require('../../assets/icn_surfing.svg')\n  },\n  {\n    name: 'Hiking',\n    desc: 'TORREY PINES',\n    bgImg: require('../../assets/hiking@2x.png'),\n    logo: require('../../assets/icn_hiking.svg')\n  },\n  {\n    name: 'Weights',\n    desc: 'HEAVY WEIGHTS',\n    bgImg: require('../../assets/weights@2x.png'),\n    logo: require('../../assets/icn_weights.svg')\n  },\n  {\n    name: 'Spinning',\n    desc: 'ROUND AND ROUND',\n    bgImg: require('../../assets/spinning@2x.png'),\n    logo: require('../../assets/icn_spin.svg')\n  }\n];\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.getHistoryActivities();\n    let dates = get7DaysRange();\n\n    this.props.getScheduledActivitiesForDate(dates[0], dates[dates.length - 1]);\n  }\n\n  _selectActivity = activity => {\n    this.props.selectActivity(activity);\n    this.props.history.push('/activity', {});\n  };\n\n  _renderActivityCards = () => {\n    return activities.map((item, index) => {\n      const { name, desc, bgImg, logo } = item;\n      return (\n        <Card\n          key={index}\n          onClick={() => this._selectActivity(item)}\n          name={name}\n          desc={desc}\n          bgImg={bgImg}\n          logo={logo}\n        />\n      );\n    });\n  };\n\n  render() {\n    const { historyActivity, scheduledActivities } = this.props;\n    return (\n      <div className=\"container\">\n        <Header />\n        <div className=\"body\">\n          <div className=\"title\">Track Your Activity</div>\n          <div\n            style={{\n              width: '100%'\n            }}\n          >\n            <section className=\"card-list\">\n              {this._renderActivityCards()}\n            </section>\n          </div>\n          <div className=\"scheduled-activity\">\n            <div\n              style={{\n                padding: '20px'\n              }}\n            >\n              <div className=\"title\">Scheduled Activities</div>\n              <ScheduledActivities data={scheduledActivities} />\n            </div>\n          </div>\n\n          <div className=\"activity-history\">\n            <div\n              style={{\n                padding: '20px'\n              }}\n            >\n              <div className=\"title\">Activity History</div>\n              <ActivityHistory data={historyActivity} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    historyActivity: state.historyActivity,\n    scheduledActivities: state.scheduledActivity\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectActivity, getHistoryActivities, getScheduledActivitiesForDate }\n)(Main);\n","import React, { Component } from 'react';\n\nclass Timer extends Component {\n  render() {\n    // const { h, m, s } = this.props.time;\n    return (\n      <div className=\"timer-container\">\n        {\n          //   <div className=\"timer-minutes\">{`${h * 1}:${m}`}</div>\n        }\n        <div className=\"timer-minutes\">{this.props.time}</div>\n        --\n        <p className=\"activity-btn\"> Minutes</p>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { clearActivity, addHistoryActivity } from '../../actions';\n\nimport Timer from '../Timer';\n\nimport './index.css';\n\nclass CurrentActivity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 11200,\n      time: new moment().format('HH:mm'),\n      startTime: ''\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentWillMount() {\n    if (!this.props.activity) {\n      return this.props.history.replace('/');\n    }\n  }\n\n  momentCounter = () => {\n    let endTime = new moment();\n    let duration = moment.duration(endTime.diff(this.state.startTime));\n    this.setState({\n      time: `${duration.asMinutes().toFixed(0)}:${duration\n        .asSeconds()\n        .toFixed(0)}`\n    });\n  };\n\n  componentDidMount() {\n    this.setState(\n      {\n        startTime: new moment()\n      },\n      () => this.momentCounter()\n    );\n\n    this.startTimer();\n  }\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.activity) {\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  startTimer() {\n    if (this.timer === 0) {\n      this.timer = setInterval(this.momentCounter, 1000);\n    }\n  }\n\n  _goBack = () => {\n    this.props.history.goBack();\n    this.props.clearActivity();\n  };\n\n  _onPressPause = () => {\n    clearInterval(this.timer);\n    this._saveActivity();\n    this._goBack();\n  };\n\n  _saveActivity = () => {\n    let currDate = new Date();\n    let dateFormat = moment(currDate, 'YYYY/MM/DD');\n    let fullDate = dateFormat.format('MM/DD/YYYY');\n    this.props.addHistoryActivity({\n      ...this.props.activity,\n      date: fullDate,\n      time: this.state.startTime.format('HH:mm'),\n      trackedTime: this.state.time,\n      timestamp: currDate.getTime()\n    });\n  };\n\n  render() {\n    const { logo, name } = this.props.activity || {};\n    return (\n      <div className=\"container-activity\">\n        <div className=\"background-img\" />\n        <div className=\"header-activity\" onClick={this._goBack}>\n          <ion-icon\n            name=\"ios-arrow-back\"\n            style={{ color: 'white', fontSize: 29 }}\n          />\n        </div>\n\n        <div\n          className=\"flex-center\"\n          style={{\n            height: '170px',\n            justifyContent: 'space-evenly'\n          }}\n        >\n          <p className=\"activity-btn\"> CURRENT ACTIVITY</p>\n          <div\n            className=\"activity-logo\"\n            style={{ width: '70px', height: '70px' }}\n          >\n            <img src={logo} />\n          </div>\n          <p\n            style={{\n              fontFamily: 'europa',\n              fontWeight: '700',\n              fontSize: '18px'\n            }}\n          >\n            {name}\n          </p>\n        </div>\n        <Timer time={this.state.time} />\n        <div className=\"flex-center\">\n          <p\n            style={{\n              width: '186px',\n              fontSize: '24px',\n              fontFamily: 'europa',\n              lineHeight: '1.1',\n              textAlign: 'center',\n              paddingBottom: '20px'\n            }}\n          >\n            Activity Tracking in Progress...\n          </p>\n          <div className=\"pause-container\" onClick={this._onPressPause}>\n            <div className=\"pause-btn\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activity: state.activity\n  };\n};\n\nCurrentActivity.propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   desc: PropTypes.string.isRequired,\n  //   bgImg: PropTypes.string.isRequired,\n  //   logo: PropTypes.string.isRequired\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { clearActivity, addHistoryActivity }\n  )(CurrentActivity)\n);\n","import React from 'react';\nimport CurrentActivity from '../components/CurrentActivity';\n\nexport default function CurrentActivityPage() {\n  return <CurrentActivity />;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport {\n  addScheduledActivity,\n  getScheduledActivitiesForDate\n} from '../../actions';\nimport './index.css';\nimport './dropdown.css';\nconst {\n  get7DaysRange,\n  findFreeSpots\n} = require('../../utils/calculateTimeSlots');\n\nconst activities = [\n  {\n    name: 'Surfing',\n    logo: require('../../assets/icn_surfing.svg'),\n    logo_light: require('../../assets/icn_surfing_light.svg')\n  },\n  {\n    name: 'Hiking',\n    logo: require('../../assets/icn_hiking.svg'),\n    logo_light: require('../../assets/icn_hiking_light.svg')\n  },\n  {\n    name: 'Weights',\n    logo: require('../../assets/icn_weights.svg'),\n    logo_light: require('../../assets/icn_weights_light.svg')\n  },\n  {\n    name: 'Spinning',\n    logo: require('../../assets/icn_spin.svg'),\n    logo_light: require('../../assets/icn_spin_light.svg')\n  }\n];\n\nclass ScheduleActivity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeActivityValue: 15,\n      dateActivityValue: false,\n      activityPicked: false\n    };\n\n    this.refTimePicker = false;\n    this.refDatePicker = false;\n  }\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.activity) {\n    }\n  };\n\n  componentDidMount() {\n    let dates = get7DaysRange();\n\n    this.props.getScheduledActivitiesForDate(dates[0], dates[dates.length - 1]);\n  }\n\n  _goBack = () => {\n    this.props.history.goBack();\n  };\n\n  _onChangeTimeActivity = value => {\n    this.setState({\n      timeActivityValue: value\n    });\n  };\n\n  _onChangeDateActivity = value => {\n    this.setState({\n      dateActivityValue: value\n    });\n  };\n\n  _renderActivityPicker = () => {\n    return activities.map((item, index) => {\n      if (item.name === this.state.activityPicked.name) {\n        return (\n          <div\n            key={index}\n            className=\"flex-center\"\n            onClick={() => this.setState({ activityPicked: item })}\n          >\n            <div className=\"activity-icon-active\">\n              <img src={item.logo_light} />\n            </div>\n            <p className=\"activity-btn\">{item.name.toUpperCase()}</p>\n          </div>\n        );\n      }\n      return (\n        <div\n          key={index}\n          className=\"flex-center\"\n          onClick={() => this.setState({ activityPicked: item })}\n        >\n          <div className=\"activity-icon\">\n            <img src={item.logo} />\n          </div>\n          <p className=\"activity-btn\">{item.name.toUpperCase()}</p>\n        </div>\n      );\n    });\n  };\n\n  _isButtonEnabled = () => {\n    const { dateActivityValue, timeActivityValue, activityPicked } = this.state;\n    if (\n      dateActivityValue !== false &&\n      timeActivityValue !== false &&\n      activityPicked !== false\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  _renderTimeSlots = () => {\n    let allSpots = [];\n    let dateGrouped = _.groupBy(this.props.scheduledActivities, 'date');\n    Object.keys(dateGrouped).map(key => {\n      let spots = findFreeSpots(dateGrouped[key], this.state.timeActivityValue);\n      // console.log('Spots', spots);\n      console.log(moment(key).format('ddd DD MMM'));\n\n      spots.map(spot => {\n        allSpots.push(`${moment(key).format('ddd DD MMM')} ${spot}`);\n      });\n    });\n    console.log('All spots', allSpots);\n    return allSpots.map((item, index) => {\n      return (\n        <option key={index} value=\"1\">\n          {item}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-sch-activity\">\n        <div className=\"header-activity\" onClick={this._goBack}>\n          <ion-icon\n            name=\"close\"\n            style={{ fontSize: 29, paddingLeft: '20px' }}\n          />\n        </div>\n        <p className=\"activity-title\"> Schedule your activity</p>\n\n        <div className=\"activity-picker\">{this._renderActivityPicker()}</div>\n\n        <div\n          className=\"flex-center\"\n          style={{\n            marginTop: '40px',\n            marginBottom: '40px'\n          }}\n        >\n          <p className=\"select-title\">\n            How long do you want to do this activity?\n          </p>\n\n          <div className=\"select\">\n            <select\n              name=\"slct\"\n              id=\"slct\"\n              onChange={item => this._onChangeTimeActivity(item.target.value)}\n              value={this.state.timeActivityValue}\n            >\n              <option value=\"15\">15 min</option>\n              <option value=\"30\">30 min</option>\n              <option value=\"45\">45 min</option>\n              <option value=\"60\">1 h</option>\n              <option value=\"90\">1h 30 min</option>\n              <option value=\"120\">2 h</option>\n              <option value=\"150\">2h 30 min</option>\n              <option value=\"180\">3 h</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"flex-center\">\n          <p className=\"select-title\">When do you want to do this activity?</p>\n          <div className=\"select\">\n            <select\n              name=\"slct\"\n              id=\"slct\"\n              onChange={item => this._onChangeDateActivity(item.target.value)}\n              value={this.state.dateActivityValue}\n            >\n              <option>Pick a date & time or find a free slot</option>\n\n              {this._renderTimeSlots()}\n            </select>\n          </div>\n        </div>\n\n        <div\n          className={`activity-btn-wrapper btn-bottom ${\n            this._isButtonEnabled() ? '' : 'disabled'\n          }`}\n          onClick={() => {\n            if (!this._isButtonEnabled()) {\n              return;\n            }\n          }}\n        >\n          <div className=\"activity-btn\">SCHEDULE</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activity: state.activity,\n    scheduledActivities: state.scheduledActivity\n  };\n};\n\nScheduleActivity.propTypes = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { addScheduledActivity, getScheduledActivitiesForDate }\n  )(ScheduleActivity)\n);\n","import React from 'react';\nimport ScheduleActivity from '../components/ScheduleActivity';\n\nexport default function ScheduleActivityPage(props) {\n  return <ScheduleActivity />;\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Main from '../components/Main';\nimport CurrentActivityPage from '../screens/CurrentActivityPage';\nimport ScheduleActivityPage from '../screens/ScheduleActivityPage';\n\nclass ReactRouter extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/activity\" component={CurrentActivityPage} />\n        <Route path=\"/schedule\" component={ScheduleActivityPage} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReactRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactRouter from './router';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nconsole.warn = () => {};\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ReactRouter />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk, logger));\n}\n"],"sourceRoot":""}